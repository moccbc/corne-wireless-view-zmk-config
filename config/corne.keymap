/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        terminal: terminal {
            compatible = "zmk,behavior-macro";
            label = "TERMINAL";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LCTRL &kp LEFT_ALT &kp T>;
        };
        dashboard: dashboard {
            compatible = "zmk,behavior-macro";
            label = "DASHBOARD";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LGUI &kp A>;
        };
        language: language {
            compatible = "zmk,behavior-macro";
            label = "LANGUAGE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 100>,
                <&macro_tap>,
                <&kp INT_KATAKANAHIRAGANA>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E          &kp R      &kp T      &kp Y      &kp U      &kp I    &kp O     &kp P        &language
 &kp LCTRL  &kp A  &kp S  &kp D          &kp F      &kp G      &kp H      &kp J      &kp K    &kp L  &kp SEMI          &kp SQT
 &kp LSHFT  &kp Z  &kp X  &kp C          &kp V      &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &to 2  &kp BACKSPACE  &kp ENTER    &kp TAB  &kp SPACE      &to 1
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &trans  &kp N1  &kp NUMBER_2  &kp N3         &kp N4     &kp N5    &kp NUMBER_6     &kp N7            &kp N8             &kp N9    &kp N0     &trans
    &trans  &trans        &trans  &trans         &trans     &trans       &kp MINUS  &kp EQUAL          &kp LBRC           &kp RBRC  &kp BSLH  &kp GRAVE
&kp LSHIFT  &trans        &trans  &trans         &trans     &trans       &kp UNDER   &kp PLUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE  &kp TILDE
                                   &to 2  &kp BACKSPACE  &kp ENTER         &kp TAB  &kp SPACE             &to 0
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1      &trans       &trans  &terminal      &trans    &trans  &trans     &trans  &kp PRINTSCREEN             &trans
    &trans    &dashboard        &trans      &trans       &trans     &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT           &trans    &kp C_VOLUME_UP
    &trans    &kp K_UNDO     &kp K_CUT  &kp K_COPY  &kp K_PASTE     &trans      &trans    &trans  &trans     &trans           &trans  &kp C_VOLUME_DOWN
                                             &to 0       &trans     &trans      &trans    &trans   &to 1
            >;
        };
    };
};
